// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prototagscache.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_prototagscache_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_prototagscache_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "protoimageinfo.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_prototagscache_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_prototagscache_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prototagscache_2eproto;
class ProtoTagsCache;
class ProtoTagsCacheDefaultTypeInternal;
extern ProtoTagsCacheDefaultTypeInternal _ProtoTagsCache_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoTagsCache* Arena::CreateMaybeMessage<::ProtoTagsCache>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ProtoTagsCache :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoTagsCache) */ {
 public:
  ProtoTagsCache();
  virtual ~ProtoTagsCache();

  ProtoTagsCache(const ProtoTagsCache& from);
  ProtoTagsCache(ProtoTagsCache&& from) noexcept
    : ProtoTagsCache() {
    *this = ::std::move(from);
  }

  inline ProtoTagsCache& operator=(const ProtoTagsCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoTagsCache& operator=(ProtoTagsCache&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoTagsCache& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoTagsCache* internal_default_instance() {
    return reinterpret_cast<const ProtoTagsCache*>(
               &_ProtoTagsCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoTagsCache& a, ProtoTagsCache& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoTagsCache* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoTagsCache* New() const final {
    return CreateMaybeMessage<ProtoTagsCache>(nullptr);
  }

  ProtoTagsCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoTagsCache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoTagsCache& from);
  void MergeFrom(const ProtoTagsCache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoTagsCache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoTagsCache";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_prototagscache_2eproto);
    return ::descriptor_table_prototagscache_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImageInfoFieldNumber = 1,
  };
  // repeated .ProtoImageInfo image_info = 1;
  int image_info_size() const;
  private:
  int _internal_image_info_size() const;
  public:
  void clear_image_info();
  ::ProtoImageInfo* mutable_image_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoImageInfo >*
      mutable_image_info();
  private:
  const ::ProtoImageInfo& _internal_image_info(int index) const;
  ::ProtoImageInfo* _internal_add_image_info();
  public:
  const ::ProtoImageInfo& image_info(int index) const;
  ::ProtoImageInfo* add_image_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoImageInfo >&
      image_info() const;

  // @@protoc_insertion_point(class_scope:ProtoTagsCache)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoImageInfo > image_info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_prototagscache_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoTagsCache

// repeated .ProtoImageInfo image_info = 1;
inline int ProtoTagsCache::_internal_image_info_size() const {
  return image_info_.size();
}
inline int ProtoTagsCache::image_info_size() const {
  return _internal_image_info_size();
}
inline ::ProtoImageInfo* ProtoTagsCache::mutable_image_info(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoTagsCache.image_info)
  return image_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoImageInfo >*
ProtoTagsCache::mutable_image_info() {
  // @@protoc_insertion_point(field_mutable_list:ProtoTagsCache.image_info)
  return &image_info_;
}
inline const ::ProtoImageInfo& ProtoTagsCache::_internal_image_info(int index) const {
  return image_info_.Get(index);
}
inline const ::ProtoImageInfo& ProtoTagsCache::image_info(int index) const {
  // @@protoc_insertion_point(field_get:ProtoTagsCache.image_info)
  return _internal_image_info(index);
}
inline ::ProtoImageInfo* ProtoTagsCache::_internal_add_image_info() {
  return image_info_.Add();
}
inline ::ProtoImageInfo* ProtoTagsCache::add_image_info() {
  // @@protoc_insertion_point(field_add:ProtoTagsCache.image_info)
  return _internal_add_image_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoImageInfo >&
ProtoTagsCache::image_info() const {
  // @@protoc_insertion_point(field_list:ProtoTagsCache.image_info)
  return image_info_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_prototagscache_2eproto
